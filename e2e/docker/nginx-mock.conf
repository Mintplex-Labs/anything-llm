events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/json;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /api/version {
            return 200 '{"version":"0.1.32"}';
            add_header Content-Type application/json;
        }

        # Models listing endpoint
        location /api/tags {
            try_files /api/tags.json =404;
            add_header Content-Type application/json;
        }

        # Test endpoint for seeding models
        location /api/test/seed-models {
            if ($request_method = POST) {
                return 200 '{"status":"success","message":"Models seeded"}';
            }
            return 405 '{"error":"Method not allowed"}';
            add_header Content-Type application/json;
        }

        # Test endpoint for clearing models
        location /api/test/clear-models {
            if ($request_method = DELETE) {
                return 200 '{"status":"success","message":"Models cleared"}';
            }
            return 405 '{"error":"Method not allowed"}';
            add_header Content-Type application/json;
        }

        # Catch-all for unsupported endpoints
        location / {
            return 404 '{"error":"Not found"}';
            add_header Content-Type application/json;
        }
    }
}
